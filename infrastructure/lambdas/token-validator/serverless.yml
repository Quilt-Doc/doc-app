# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: token-validator
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  environment:
    DB_USER: ${self:custom.dbUser.${self:provider.stage}}
    DB_PASS: ${self:custom.dbPass.${self:provider.stage}}
    DB_ADDRESS: ${self:custom.dbAddress.${self:provider.stage}}
    SENTRY_DSN: ${self:custom.sentryDSN.${self:provider.stage}}
    GITHUB_CLIENT_ID: ${self:custom.githubClientId.${self:provider.stage}}
    GITHUB_CLIENT_SECRET: ${self:custom.githubClientSecret.${self:provider.stage}}
    GITHUB_APP_ID: ${self:custom.githubAppId.${self:provider.stage}}
    GITHUB_APP_PRIVATE_KEY_FILE: ${self:custom.githubAppPrivateKeyFile.${self:provider.stage}}
    GITHUB_API_URL: 
    BACKEND_API_URL: ${self:custom.backendApiUrl.${self:provider.stage}}

# Custom Variables
custom:
  stages:
    - test
    - prod
  dbUser:
    test: docAppUser
    prod: docAppUser
  dbPass:
    test: docAppPass
    prod: docAppPass
  dbAddress:
    test: quilt-prod-cluster.hnftq.mongodb.net/prod?retryWrites=true&w=majority
    prod: docapp-cluster-hnftq.mongodb.net/test?retryWrites=true&w=majority
  sentryDSN:
    test: https://8ef69c60e93d44e293d06c1f75566913@o504090.ingest.sentry.io/5781174
    prod: https://9dc09a0acca94a8b9e08bb7066763b2c@o504090.ingest.sentry.io/5694501
  githubClientId:
    test: Iv1.a6d2c6fcea7a1923
    prod: Iv1.fc1de54d35e2ddaf
  githubClientSecret:
    test: 673590f181e5c9e09bad8140756ea79daf9907c9
    prod: e58e8d68173ce09782a3925c8fa110f1dd73d057
  githubAppId:
    test: 116889
    prod: 68514
  githubAppPrivateKeyFile:
    test: get-quilt-test.2021-05-24.private-key.pem
    prod: docapp-test.pem
  githubApiUrl:
    test: https://api.github.com
    prod: https://api.github.com
  backendApiUrl:
    test: https://api.getquilt.app/api
    prod: https://api.getquilt.app/api


# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  patterns:
#    - '!exclude-me.js'
#    - '!exclude-me-dir/**'
#    - include-me.js
#    - include-me-dir/**

functions:
  hello:
    handler: handler.hello
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - httpApi:
#          path: /users/create
#          method: get
#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
#      - alb:
#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/
#          priority: 1
#          conditions:
#            host: example.com
#            path: /hello

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
